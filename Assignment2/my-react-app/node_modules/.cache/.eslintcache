[{"/var/www/html/reactjs/Assignment2/my-react-app/src/index.js":"1","/var/www/html/reactjs/Assignment2/my-react-app/src/App.js":"2","/var/www/html/reactjs/Assignment2/my-react-app/src/reportWebVitals.js":"3","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/HomePage.js":"4","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/Layout.js":"5","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/CheckoutPage.js":"6","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/AboutUs.js":"7","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/ContactUS.js":"8","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/CartPage.js":"9","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/ProductPage.js":"10","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/Payment.js":"11"},{"size":1247,"mtime":1681206968007,"results":"12","hashOfConfig":"13"},{"size":150,"mtime":1681102207175,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1681101512712,"results":"15","hashOfConfig":"13"},{"size":3037,"mtime":1681217163271,"results":"16","hashOfConfig":"13"},{"size":2517,"mtime":1681190467435,"results":"17","hashOfConfig":"13"},{"size":3003,"mtime":1681215856839,"results":"18","hashOfConfig":"13"},{"size":3122,"mtime":1681368304287,"results":"19","hashOfConfig":"13"},{"size":3390,"mtime":1681301954369,"results":"20","hashOfConfig":"13"},{"size":3120,"mtime":1681364611908,"results":"21","hashOfConfig":"13"},{"size":2254,"mtime":1681188331640,"results":"22","hashOfConfig":"13"},{"size":3462,"mtime":1681211122080,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"h8iztm",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/var/www/html/reactjs/Assignment2/my-react-app/src/index.js",[],[],[],"/var/www/html/reactjs/Assignment2/my-react-app/src/App.js",["61"],[],"/var/www/html/reactjs/Assignment2/my-react-app/src/reportWebVitals.js",[],[],"/var/www/html/reactjs/Assignment2/my-react-app/src/pages/HomePage.js",["62","63"],[],"import React, {useEffect, useState} from 'react';\nimport './HomePage.css';\nimport SimpleImageSlider from \"react-simple-image-slider\";\nexport default function App() {\n    const sliderImages = [\n        {\n            url:\"images/slider2.jpg\",\n        },\n        {\n            url:\"images/slider1.jpg\",\n        },\n        {\n            url:\"images/slider3.jpg\",\n        },\n    ];\n\n    const [products, setProducts] = useState([]);\n    const [cartItems, setCartItems] = useState([]);\n\n    useEffect(() => {\n        // Load cart items from local storage\n        const savedCartItems = JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\");\n        setCartItems(savedCartItems);\n\n        fetch(\"/product.json\")\n            .then((response) => response.json())\n            .then((data) => setProducts(data))\n            .catch((error) => console.error(error));\n    }, []);\n\n    const handleAddToCart = (product) => {\n        // Check if the product is already in the cart\n        const existingItem = cartItems.find((item) => item.id === product.id);\n\n        if (existingItem) {\n            // Increment the quantity if the product is already in the cart\n            const updatedCartItems = cartItems.map((item) =>\n                item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n            );\n            setCartItems(updatedCartItems);\n        } else {\n            // Add the product to the cart with a quantity of 1\n            const newCartItem = { id: product.id, name: product.name, price: product.price, quantity: 1 };\n            setCartItems([...cartItems, newCartItem]);\n        }\n    };\n\n    // Save cart items to local storage whenever the cart items state changes\n    useEffect(() => {\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    }, [cartItems]);\n    return (\n        <div className=\"home\">\n            <div className=\"banner\">\n                <SimpleImageSlider\n                    width={1300}\n                    height={250}\n                    images={sliderImages}\n                    showNavs={true}\n                    slideDuration={0.5}\n                    autoPlay={true}\n                    autoPlayDelay={2.0}\n                />\n            </div>\n            <div className=\"productlist\">\n                {products.map((product) => (\n                    <div className=\"product\" key={product.id}>\n                        <h3>{product.name}</h3>\n                        <img id=\"img\" src={product.image} alt={product.name} />\n                        <p className=\"desc\">{product.description}</p>\n                        <p className=\"price\">{product.price} Rs</p>\n                        <button onClick={ () => {if(window.confirm(\"Are you sure to add product in cart \"))\n                        { handleAddToCart(product)};}}>Add to Cart</button>\n                    </div>\n                ))}\n            </div>\n            <img className=\"home\" src=\"images/home1.jpg\"  />\n            <img className=\"home\" src=\"images/home2.jpg\"  />\n\n        </div>\n    );\n}\n","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/Layout.js",[],[],"/var/www/html/reactjs/Assignment2/my-react-app/src/pages/CheckoutPage.js",["64"],[],"import React, {useState} from 'react';\nimport './checkoutPage.css';\nconst BillingPage = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zip, setZip] = useState('');\n\n    const handleInputChange = (e) => {\n        const {name, value} = e.target;\n        let isValid = true;\n\n        if (name === 'name') {\n            // validate name input\n            const regex = /^[a-zA-Z\\s]*$/;\n            isValid = regex.test(value);\n            setName(value);\n        } else if (name === 'email') {\n            setEmail(value);\n        } else if (name === 'address') {\n            // validate address input\n            const regex = /^[a-zA-Z0-9\\s,'-]*$/;\n            isValid = regex.test(value);\n            setAddress(value);\n        } else if (name === 'city') {\n            // validate city input\n            const regex = /^[a-zA-Z\\s]*$/;\n            isValid = regex.test(value);\n            setCity(value);\n        } else if (name === 'state') {\n            // validate state input\n            const regex = /^[a-zA-Z\\s]*$/;\n            isValid = regex.test(value);\n            setState(value);\n        } else if (name === 'zip') {\n            setZip(value);\n        }\n\n        if (!isValid) {\n            alert(`Invalid ${name} input`);\n        }\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        alert(\"Address Added Successfully\")\n        window.location.href = \"Payment/\";\n    };\n\n    return (<body className=\"billing-page\">\n        <img src=\"images/asd.png\"/>\n        <form onSubmit={handleSubmit} className=\"form-container\">\n            <h2>Billing Address</h2>\n            <fieldset>\n            <label>\n                Name:\n                <input type=\"text\" name=\"name\" value={name} onChange={handleInputChange} required/>\n            </label>\n            <label>\n                Email:\n                <input type=\"email\" name=\"email\" value={email} onChange={handleInputChange} required/>\n            </label>\n            <label>\n                Address:\n                <input type=\"text\" name=\"address\" value={address} onChange={handleInputChange} required/>\n            </label>\n            <label>\n                City:\n                <input type=\"text\" name=\"city\" value={city} onChange={handleInputChange} required/>\n            </label>\n            <label>\n                State:\n                <input type=\"text\" name=\"state\" value={state} onChange={handleInputChange} required/>\n            </label>\n            <label>\n                ZIP Code:\n                <input type=\"number\" name=\"zip\" value={zip} onChange={handleInputChange} maxLength={7}\n                       minLength={5} required/>\n            </label>\n            <button type=\"submit\">Submit</button>\n            </fieldset>\n        </form>\n        </body>\n\n    );\n};\n\nexport default BillingPage;","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/AboutUs.js",["65"],[],"/var/www/html/reactjs/Assignment2/my-react-app/src/pages/ContactUS.js",["66","67"],[],"/var/www/html/reactjs/Assignment2/my-react-app/src/pages/CartPage.js",[],[],"/var/www/html/reactjs/Assignment2/my-react-app/src/pages/ProductPage.js",["68"],[],"import React from 'react';\nimport {  useState , useEffect} from \"react\";\nimport axios from \"axios\";\nimport './Product.css';\nfunction ProductPage() {\n    const [products, setProducts] = useState([]);\n    const [cartItems, setCartItems] = useState([]);\n\n    useEffect(() => {\n        // Load cart items from local storage\n        const savedCartItems = JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\");\n        setCartItems(savedCartItems);\n\n        fetch(\"/product.json\")\n            .then((response) => response.json())\n            .then((data) => setProducts(data))\n            .catch((error) => console.error(error));\n    }, []);\n\n    const handleAddToCart = (product) => {\n        // Check if the product is already in the cart\n        const existingItem = cartItems.find((item) => item.id === product.id);\n\n        if (existingItem) {\n            // Increment the quantity if the product is already in the cart\n            const updatedCartItems = cartItems.map((item) =>\n                item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n            );\n            setCartItems(updatedCartItems);\n        } else {\n            // Add the product to the cart with a quantity of 1\n            const newCartItem = { id: product.id, name: product.name, price: product.price, quantity: 1 };\n            setCartItems([...cartItems, newCartItem]);\n        }\n    };\n\n    // Save cart items to local storage whenever the cart items state changes\n    useEffect(() => {\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    }, [cartItems]);\n    return (\n        <div className=\"product-list\">\n            {products.map((product) => (\n                <div className=\"product\" key={product.id}>\n                    <h3>{product.name}</h3>\n                    <img id=\"img\" src={product.image} alt={product.name} />\n                    <p className=\"des\">{product.description}</p>\n                    <p className=\"price\">{product.price} Rs</p>\n                    <button onClick={ () => {if(window.confirm(\"Are you sure to add product in cart \"))\n                         { handleAddToCart(product)};}}>Add to Cart</button>\n                </div>\n            ))}\n        </div>\n    );\n}\nexport default ProductPage;\n","/var/www/html/reactjs/Assignment2/my-react-app/src/pages/Payment.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":77,"column":13,"nodeType":"75","endLine":77,"endColumn":61},{"ruleId":"73","severity":1,"message":"74","line":78,"column":13,"nodeType":"75","endLine":78,"endColumn":61},{"ruleId":"73","severity":1,"message":"74","line":54,"column":9,"nodeType":"75","endLine":54,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":28,"column":25,"nodeType":"75","endLine":28,"endColumn":56},{"ruleId":"69","severity":1,"message":"76","line":5,"column":12,"nodeType":"71","messageId":"72","endLine":5,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":80,"column":13,"nodeType":"75","endLine":80,"endColumn":62},{"ruleId":"69","severity":1,"message":"77","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'formStatus' is assigned a value but never used.","'axios' is defined but never used."]