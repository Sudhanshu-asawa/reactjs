import * as React from 'react';
import '../styles/index.css';
import { strinfigyClassObject } from './utils';
import MainCardData from './MainCardData';
import BackCardData from './BackCardData';
import { MasterCardLogo, VisaLogo, MaestroLogo, AmericanExpressLogo, JCBLogo, DinersClubLogo, MirLogo } from './icons';
const ATMCard = React.forwardRef((props, ref) => {
    const [main, setMain] = React.useState(true);
    const [number, setNumber] = React.useState(props.number ? props.number : '');
    const [year, setYear] = React.useState(props.year ? props.year : 0);
    const [month, setMonth] = React.useState(props.month ? props.month : 0);
    const [holderName, setHolderName] = React.useState(props.holderName ? props.holderName : '');
    const [cvv, setCvv] = React.useState(props.cvv ? props.cvv : '');
    let className = {
        name: 'component-atm-card-container',
        lifted: props.lifted ? 'lifted' : '',
        className: props.className ? props.className : ''
    };
    const handleRotate = () => setMain(!main);
    const handleChange = (value, field) => {
        switch (field) {
            case 'number':
                if (props.onChange)
                    props.onChange({ number: value, month, year, holder: holderName, cvv });
                if (value.length <= 16)
                    setNumber(value);
                break;
            case 'month':
                if (props.onChange) {
                    if (value.length <= 2) {
                        props.onChange({ number, month: parseInt(value), year, holder: holderName, cvv });
                        setMonth(parseInt(value));
                    }
                }
                break;
            case 'year':
                if (props.onChange) {
                    if (value.length <= 2) {
                        setYear(parseInt(value));
                        props.onChange({ number, year: parseInt(value), month, holder: holderName, cvv });
                    }
                }
                break;
            case 'holderName':
                if (props.onChange)
                    props.onChange({ number, month, year, holder: value, cvv });
                setHolderName(value ? value.toUpperCase() : '');
                break;
            case 'cvv':
                if (props.onChange)
                    props.onChange({ number, month, year, holder: holderName, cvv: value });
                if (value.length <= 3)
                    setCvv(value);
                break;
            default:
                break;
        }
    };
    const getSystemLogo = () => {
        switch (props.system) {
            case 'mastercard':
                return React.createElement(MasterCardLogo, { size: 80 * (props.scale ? props.scale : 1) });
            case 'visa':
                return React.createElement(VisaLogo, { size: 80 * (props.scale ? props.scale : 1) });
            case 'maestro':
                return React.createElement(MaestroLogo, { size: 65 * (props.scale ? props.scale : 1) });
            case 'americanexpress':
                return React.createElement(AmericanExpressLogo, { size: 100 * (props.scale ? props.scale : 1) });
            case 'jcb':
                return React.createElement(JCBLogo, { size: 70 * (props.scale ? props.scale : 1) });
            case 'dinersclub':
                return React.createElement(DinersClubLogo, { size: 70 * (props.scale ? props.scale : 1) });
            case 'mir':
                return React.createElement(MirLogo, { size: 100 * (props.scale ? props.scale : 1) });
            default:
                return null;
        }
    };
    return (React.createElement("div", { className: strinfigyClassObject(className), id: props.id ? props.id : '', ref: ref }, main ?
        React.createElement(MainCardData, { numberFontSize: props.numberFontSize, fontFamily: props.fontFamily, bankLogo: props.bankLogo, system: getSystemLogo(), bgImage: props.bgImage, bgColor: props.bgColor, hideDigits: props.hideDigits, onRotate: handleRotate, dataColor: props.dataColor, number: number, holderName: holderName, month: month, year: year, dark: props.dark, scale: props.scale, onChange: handleChange }) :
        React.createElement(BackCardData, { fontFamily: props.fontFamily, onRotate: handleRotate, dataColor: props.dataColor, cvv: cvv, dark: props.dark, bankLogo: props.bankLogo, system: getSystemLogo(), onChange: handleChange, bgImage: props.bgImage, bgColor: props.bgColor, scale: props.scale })));
});
export default ATMCard;
